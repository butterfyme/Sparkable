version: '3'
services:
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    ports:
      - '5000:5000'
    depends_on:
      - db
    environment:
      CLIENT_URL: http://localhost:3000
      DATABASE_URL: postgres://user:password@db/db
      # GITHUB_CALLBACK_URL: /auth/github/callback
      NODE_ENV: development
      PORT: 5000
    volumes:
      - ./backend:/usr/app
      - /usr/app/node_modules
      - ./types:/usr/types
    networks:
      - server-side

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_LISTEN_PORT: 80
    networks:
      - server-side
    ports:
      - '8080:80'
    depends_on:
      - db
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  db:
    image: postgres
    container_name: db
    restart: always
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    networks:
      - server-side
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./docker_postgres_init_testdb.sql:/docker-entrypoint-initdb.d/docker_postgres_init_testdb.sql

  # frontend:
  #   container_name: frontend
  #   build:
  #     context: .
  #     dockerfile: ./frontend/Dockerfile
  #   ports:
  #     - '3000:3000'
  #   depends_on:
  #     - backend
  #   environment:
  #     NODE_ENV: development
  #     PORT: 3000
  #   volumes:
  #     - ./frontend:/usr/app
  #     - /usr/app/node_modules
  #     - ./types:/usr/types
  #   networks:
  #     - client-side

networks:
  #client-side: {}
  server-side: {}

volumes:
  backend: {}
  db-data: {}
  pgadmin-data: {}
